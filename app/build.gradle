plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'net.ltgt.apt' version '0.21'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.altaie.marvel"
        minSdk 26
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def configurationsPropertiesFile = rootProject.file("configurations.properties")
        def configurationsProperties = new Properties()
        configurationsProperties.load(new FileInputStream(configurationsPropertiesFile))

        def KEY = "KEY", API_KEY = "API_KEY", BASE_URL = "BASE_URL"
        buildConfigField("String", KEY, configurationsProperties[KEY])
        buildConfigField("String", API_KEY, configurationsProperties[API_KEY])
        buildConfigField("String", BASE_URL, configurationsProperties[BASE_URL])
    }

     buildFeatures {
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    kapt {
        correctErrorTypes = true
    }
}

dependencies {
    // ORIGINAL
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.6.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // CODEC
    implementation('commons-codec:commons-codec:1.15')

    // DAGGER
    def hilt_version = '2.40.3'
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")
    implementation("androidx.hilt:hilt-navigation-fragment:1.0.0")

    // GSON
    implementation('com.google.code.gson:gson:2.8.9')

    // NAVIGATION
    def nav_version = "2.4.0-beta02"
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-runtime-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    // ROOM DATABASE
    def room_version = "2.4.0-beta02"
    implementation("androidx.room:room-runtime:$room_version")
    kapt("androidx.room:room-compiler:$room_version")
    implementation("androidx.room:room-ktx:$room_version")

    // COROUTINES
    def lifecycle_version = "2.4.0"
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")

    // OKHTTP
    def okhttp_version = '5.0.0-alpha.3'
    implementation("com.squareup.okhttp3:okhttp:$okhttp_version")
    implementation("com.squareup.okhttp3:logging-interceptor:$okhttp_version")

    // RETROFIT
    implementation("com.squareup.retrofit2:retrofit:2.9.0")
    implementation("com.squareup.retrofit2:converter-gson:2.9.0")

    // GLIDE
    implementation("com.github.bumptech.glide:glide:4.12.0")
    kapt("com.github.bumptech.glide:compiler:4.12.0")

    // PALETTE
    implementation("androidx.palette:palette-ktx:1.0.0")

    // EXTENSIONS
    implementation("androidx.fragment:fragment-ktx:1.4.0")
    implementation("androidx.activity:activity-ktx:1.4.0")
    implementation('androidx.collection:collection-ktx:1.1.0')

    implementation 'org.mapstruct:mapstruct:1.4.2.Final'

    kapt 'org.mapstruct:mapstruct-processor:1.4.2.Final'
}
